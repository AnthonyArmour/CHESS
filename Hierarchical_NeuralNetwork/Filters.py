#!/usr/bin/env python3
import numpy as np
import tensorflow as tf

def my_filter(shape, dtype='float32'):


    f = np.array([
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[2]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[2]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[3]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[2]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[2]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]]
        ])
    f2 = np.array([
            [[[0]], [[0]], [[0]], [[2]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[2]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[2]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[3]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[2]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[2]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[2]], [[0]], [[0]], [[0]]]
        ])
    f = np.concatenate((f, f2), axis=3)
    f2 = np.array([
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[2]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[3]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[2]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]]
        ])
    f = np.concatenate((f, f2), axis=3)



    f2 = np.array([
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[2]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[2]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[3]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[2]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[2]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]]
        ])
    f = np.concatenate((f, f2), axis=3)
    f2 = np.array([
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[2]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[3]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[2]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]]
        ])
    f = np.concatenate((f, f2), axis=3)
    f2 = np.array([
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[2]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[2]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[2]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[3]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[2]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[2]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[2]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]]
        ])
    f = np.concatenate((f, f2), axis=3)





    f2 = np.array([
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[2]], [[2]], [[3]], [[2]], [[2]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]]
        ])
    f = np.concatenate((f, f2), axis=3)
    f2 = np.array([
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[2]], [[2]], [[2]], [[3]], [[2]], [[2]], [[2]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]]
        ])
    f = np.concatenate((f, f2), axis=3)
    f2 = np.array([
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[2]], [[3]], [[2]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]]
        ])
    f = np.concatenate((f, f2), axis=3)




    f2 = np.array([
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[2]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[2]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[3]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[2]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[2]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]]
        ])
    f = np.concatenate((f, f2), axis=3)
    f2 = np.array([
            [[[2]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[2]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[2]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[3]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[2]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[2]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[2]]]
        ])
    f = np.concatenate((f, f2), axis=3)
    f2 = np.array([
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[2]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[3]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[2]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]]
        ])
    f = np.concatenate((f, f2), axis=3)





    f2 = np.array([
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]],
            [[[0]], [[0]], [[2]], [[0]], [[2]], [[0]], [[0]]],
            [[[0]], [[2]], [[0]], [[0]], [[0]], [[2]], [[0]]],
            [[[0]], [[0]], [[0]], [[3]], [[0]], [[0]], [[0]]],
            [[[0]], [[2]], [[0]], [[0]], [[0]], [[2]], [[0]]],
            [[[0]], [[0]], [[2]], [[0]], [[2]], [[0]], [[0]]],
            [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]]
        ])
    f = np.concatenate((f, f2), axis=3)







    # f2 = np.array([
    #         [[[0]], [[0]], [[0]], [[0]], [[0]]],
    #         [[[0]], [[0]], [[0]], [[0]], [[0]]],
    #         [[[0]], [[2]], [[3]], [[2]], [[0]]],
    #         [[[0]], [[0]], [[0]], [[0]], [[0]]],
    #         [[[0]], [[0]], [[0]], [[0]], [[0]]]
    #     ])
    # f = np.concatenate((f, f2), axis=3)
    # f2 = np.array([
    #         [[[0]], [[0]], [[0]], [[0]], [[0]]],
    #         [[[0]], [[0]], [[0]], [[0]], [[0]]],
    #         [[[2]], [[2]], [[3]], [[2]], [[2]]],
    #         [[[0]], [[0]], [[0]], [[0]], [[0]]],
    #         [[[0]], [[0]], [[0]], [[0]], [[0]]]
    #     ])
    # f = np.concatenate((f, f2), axis=3)
    # f2 = np.array([
    #         [[[0]], [[0]], [[0]], [[0]], [[0]]],
    #         [[[0]], [[0]], [[0]], [[2]], [[0]]],
    #         [[[0]], [[0]], [[3]], [[0]], [[0]]],
    #         [[[0]], [[2]], [[0]], [[0]], [[0]]],
    #         [[[0]], [[0]], [[0]], [[0]], [[0]]]
    #     ])
    # f = np.concatenate((f, f2), axis=3)
    # f2 = np.array([
    #         [[[0]], [[0]], [[0]], [[0]], [[2]]],
    #         [[[0]], [[0]], [[0]], [[2]], [[0]]],
    #         [[[0]], [[0]], [[3]], [[0]], [[0]]],
    #         [[[0]], [[2]], [[0]], [[0]], [[0]]],
    #         [[[2]], [[0]], [[0]], [[0]], [[0]]]
    #     ])
    # f = np.concatenate((f, f2), axis=3)
    # f2 = np.array([
    #         [[[0]], [[2]], [[0]], [[2]], [[0]]],
    #         [[[2]], [[0]], [[0]], [[0]], [[2]]],
    #         [[[0]], [[0]], [[3]], [[0]], [[0]]],
    #         [[[2]], [[0]], [[0]], [[0]], [[2]]],
    #         [[[0]], [[2]], [[0]], [[2]], [[0]]]
    #     ])
    # f = np.concatenate((f, f2), axis=3)

    return tf.Variable(f, dtype=dtype, trainable=False)